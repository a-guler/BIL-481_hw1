/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package BIL._hw1;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.awt.geom.Point2D;

class AppTest {

    @Test
   public void testfindClosest() {
      ArrayList<Point2D> array = new ArrayList<>();
      array.add(new Point2D.Double(1,2));
      array.add(new Point2D.Double(1,3));
      array.add(new Point2D.Double(1,4));
      array.add(new Point2D.Double(1,5));
      assertEquals(App.calculateNearestEmergencies(array, new Point2D.Double(1,2), 1).get(0), new Point2D.Double(1,2));
    }

    @Test
    public void testKisBiggerThanSize() {
      ArrayList<Point2D> array = new ArrayList<>();
      array.add(new Point2D.Double(1,2));
      array.add(new Point2D.Double(1,3));
      array.add(new Point2D.Double(1,4));
      array.add(new Point2D.Double(1,5));
      assertEquals(App.calculateNearestEmergencies(array, new Point2D.Double(1,1), 10),array);
    }

    @Test
    public void testAllEmergenciesAreSame() {
      ArrayList<Point2D> array = new ArrayList<>();
      array.add(new Point2D.Double(1,2));
      array.add(new Point2D.Double(1,2));
      array.add(new Point2D.Double(1,2));
      array.add(new Point2D.Double(1,2));
      ArrayList<Point2D> result = new ArrayList<>();
      result.add(new Point2D.Double(1,2));
      result.add(new Point2D.Double(1,2));
      assertEquals(App.calculateNearestEmergencies(array, new Point2D.Double(1,1), 2), result);
    }

    @Test
    public void testEmptyArray() {
      ArrayList<Point2D> array = new ArrayList<>();
      assertTrue(App.calculateNearestEmergencies(array, new Point2D.Double(1,1), 10).isEmpty());
    }

    @Test
    public void testSize1() {
      ArrayList<Point2D> array = new ArrayList<>();
      array.add(new Point2D.Double(100,100));
      assertEquals(App.calculateNearestEmergencies(array, new Point2D.Double(1,1), 10),array);
    }

    @Test
    public void testNull() {
      assertTrue(App.calculateNearestEmergencies(null, new Point2D.Double(1,1), 10).isEmpty());
    }

}
